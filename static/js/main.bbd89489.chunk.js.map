{"version":3,"sources":["features/tasks/getExampleTasks.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","features/tasks/Form/style.js","features/tasks/Form/index.js","features/tasks/Buttons/style.js","features/tasks/Buttons/index.js","common/Section/style.js","common/Section/index.js","common/Header/style.js","common/Header/index.js","common/Container/style.js","common/Container/index.js","common/MainContainer/index.js","features/tasks/Search/style.js","features/tasks/Search/index.js","features/tasks/TasksList/style.js","features/tasks/TasksList/index.js","features/tasks/Tasks.js","features/author/Author.js","features/tasks/TaskPage/index.js","style.js","App.js","serviceWorker.js","GlobalStyle.js","index.js"],"names":["getExampleTasks","a","axios","get","response","tasks","data","console","error","localStorageKey","saveTasksInLocalStorage","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","parse","getItem","hideDone","reducers","addTask","payload","push","toggleHideDone","state","toggleTaskDone","index","findIndex","task","id","done","removeTask","splice","setAllDone","map","fetchExampleTasks","setExampleTasks","actions","selectTasks","selectHideDone","fetchExampleTasksHandler","addTasksToLocalStorageHandler","tasksSaga","call","exampleTasks","put","alert","select","throttle","type","takeEvery","rootSaga","all","sagaMiddleWare","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","StyledForm","styled","form","Input","input","Button","button","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","trim","content","nanoid","current","focus","ref","value","placeholder","onChange","target","Span","span","Buttons","useSelector","length","onClick","disabled","every","Section","section","H2","h2","Div","div","Sections","title","extrasToHeader","body","Fragment","Title","h1","StyledHeader","header","Header","className","Container","props","children","MainContainer","Search","useLocation","search","pathname","query","URLSearchParams","history","useHistory","searchParams","delete","set","toString","StyledNavLink","NavLink","attrs","activeClassName","Ul","ul","Li","li","display","css","toDelete","Icon","TasksList","filter","toUpperCase","includes","selectTasksByQuery","to","Tasks","Author","Task","useParams","taskId","find","selectTaskById","log","Nav","nav","App","path","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bbd89489.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst getExampleTasks = async () => {\n    try {\n        const response = await axios.get(\"/To-do-list-React/exampleTasks.json\");\n        const tasks = response.data;\n\n        return tasks;\n\n    } catch (error) {\n        console.error(error);\n    };\n};\n\nexport default getExampleTasks;","const localStorageKey = \"tasks\";\n\nexport const saveTasksInLocalStorage = (tasks) => {\n    localStorage.setItem(localStorageKey, JSON.stringify(tasks));\n};\n\nexport const getTasksFromLocalStorage = () =>\n    JSON.parse(localStorage.getItem(localStorageKey)) || [];\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getTasksFromLocalStorage } from \"./tasksLocalStorage\";\n\nconst tasksSlice = createSlice({\n    name: \"tasks\",\n    initialState: {\n        tasks: getTasksFromLocalStorage(),\n        hideDone: false,\n    },\n    reducers: {\n        addTask: ({ tasks }, { payload }) => {\n            tasks.push(payload);\n        },\n        toggleHideDone: (state) => {\n            state.hideDone = !state.hideDone;\n        },\n        toggleTaskDone: ({ tasks }, { payload }) => {\n            const index = tasks.findIndex(task => task.id === payload);\n            tasks[index].done = !tasks[index].done;\n        },\n        removeTask: ({ tasks }, { payload }) => {\n            const index = tasks.findIndex(task => task.id === payload);\n            tasks.splice(index, 1);\n        },\n        setAllDone: ({ tasks }) => {\n            tasks.map(task => task.done = true);\n        },\n        fetchExampleTasks: () => {\n\n        },\n        setExampleTasks: (state, { payload: tasks }) => {\n            state.tasks = tasks;\n        }\n    }\n});\n\nexport const { addTask, toggleHideDone, toggleTaskDone, removeTask, setAllDone, fetchExampleTasks, setExampleTasks } = tasksSlice.actions;\nexport const selectTasks = state => state.tasks.tasks;\nexport const selectHideDone = state => state.tasks.hideDone;\nexport const selectTaskById = (state, taskId) => {\n    const tasks = selectTasks(state);\n    return tasks.find(task => task.id === taskId);\n};\nexport const selectTasksByQuery = (state, query) => {\n    const tasks = selectTasks(state);\n    if (!query || query.trim() === \"\") {\n        return tasks;\n    }\n\n    return tasks.filter(({ content }) => content.toUpperCase().includes(query.trim().toUpperCase()));\n}\nexport default tasksSlice.reducer;\n","import { call, throttle, put, takeEvery, select } from \"redux-saga/effects\";\nimport getExampleTasks from \"./getExampleTasks\";\nimport { fetchExampleTasks, selectTasks, setExampleTasks } from \"./tasksSlice\";\nimport { saveTasksInLocalStorage } from \"./tasksLocalStorage\";\n\nfunction* fetchExampleTasksHandler() {\n    try {\n        const exampleTasks = yield call(getExampleTasks);\n        yield put(setExampleTasks(exampleTasks));\n    } catch (error) {\n        yield call(alert, \"Popsute :/\");\n    };\n};\n\nfunction* addTasksToLocalStorageHandler() {\n    try {\n        const tasks = yield select(selectTasks);\n        yield call(saveTasksInLocalStorage, tasks);\n    } catch (error) {\n        yield call(alert, \"Popsute :/\");\n    };\n};\n\nexport default function* tasksSaga() {\n    yield throttle(10_000, fetchExampleTasks.type, fetchExampleTasksHandler);\n    yield takeEvery(\"*\", addTasksToLocalStorageHandler);\n};","import { all } from \"redux-saga/effects\";\nimport tasksSaga from \"./features/tasks/tasksSaga\";\n\nexport default function* rootSaga() {\n    yield all([\n        tasksSaga(),\n    ])\n}","import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./rootSaga\";\nimport tasksReducer from \"./features/tasks/tasksSlice\";\n\nconst sagaMiddleWare = createSagaMiddleware();\n\n\nconst store = configureStore({\n    reducer: {\n        tasks: tasksReducer,\n    },\n    middleware: [sagaMiddleWare],\n})\n\nsagaMiddleWare.run(rootSaga);\n\nexport default store;","import styled from \"styled-components\";\n\nconst StyledForm = styled.form`\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    flex-wrap: wrap;\n`;\n\nconst Input = styled.input`\n    border: 1px solid #ccc;\n    flex-grow: 1;\n    padding: 9px;\n    align-self: center;\n\n    @media (max-width: 767px) {\n        height: 45px;\n    }\n`;\n\nconst Button = styled.button`\n    background-color: teal;\n    box-shadow: 0 0 5px #ccc;\n    border: none;\n    color: rgba(255, 255, 255, 0.801);\n    transition: 0.5s;\n    margin-left: 15px;\n\n    &:hover {\n        opacity: 0.7;\n        transform: scale(1.1);\n    }\n\n    @media (max-width: 767px) {\n        flex-grow: 1;\n        align-self: center;\n        height: 45px;\n        margin: 10px;\n    }\n`;\n\nexport { StyledForm, Input, Button };","import React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { addTask } from \"../tasksSlice\";\nimport { StyledForm, Input, Button } from \"./style.js\";\n\n\nconst Form = () => {\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\n    const inputRef = useRef(null);\n\n    const dispatch = useDispatch();\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        if (newTaskContent.trim() === \"\") {\n            return;\n        };\n\n        dispatch(addTask({\n            content: newTaskContent.trim(),\n            done: false,\n            id: nanoid(),\n        }));\n\n        inputRef.current.focus();\n        setNewTaskContent(\"\");\n    };\n\n    return (\n        <StyledForm onSubmit={onFormSubmit}>\n            <Input ref={inputRef} value={newTaskContent} placeholder=\"Co jest do zrobienia?\" onChange={(event) => setNewTaskContent(event.target.value)} />\n            <Button>Dodaj zadanie</Button>\n        </StyledForm>\n    );\n};\n\nexport default Form;","import styled from \"styled-components\";\n\nconst Span = styled.span`\n    display: flex;\n    justify-content: center;\n\n    @media (max-width: 466px) {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n`;\n\nconst Button = styled.button`\n    border: none;\n    background-color: white;\n    color: teal;\n    padding: 0 10px;\n    transition: 0.5s;\n\n    &:hover {\n        opacity: 0.7;\n    }\n\n    &:disabled {\n        color: grey;\n    }\n\n    @media (max-width: 466px) {\n        margin: 5px 0;\n    }\n`;\n\nexport { Span, Button };\n","import React from \"react\";\nimport { Span, Button } from \"./style.js\";\nimport { selectTasks, toggleHideDone, setAllDone, selectHideDone } from \"../tasksSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst Buttons = () => {\n    const dispatch = useDispatch();\n\n    const tasks = useSelector(selectTasks);\n    const hideDone = useSelector(selectHideDone);\n\n    if (tasks.length === 0) {\n        return null;\n    }\n\n    return (\n        <Span>\n            <Button onClick={() => dispatch(toggleHideDone())}>{hideDone ? \"Pokaż ukończone\" : \"Ukryj ukończone\"}</Button>\n            <Button onClick={() => dispatch(setAllDone())} disabled={tasks.tasks.every(({ done }) => done)}>Ukończ wszystkie</Button>\n        </Span >\n    )\n}\n\nexport default Buttons;","import styled from \"styled-components\";\n\nconst Section = styled.section`\n    background-color: white;\n    padding: 15px;\n    box-shadow: 0 0 5px #ccc;\n    display: flex;\n    flex-wrap: wrap;\n    margin: 2px;\n`;\n\nconst H2 = styled.h2`\n    flex-grow: 1;\n    align-self: center; \n    justify-self: center;\n    margin: 8px;\n`;\n\nconst Div = styled.div`\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n    width: 100vw;\n`;\n\nexport { Section, H2, Div };","import React from \"react\";\nimport { Section, H2, Div } from \"./style.js\";\n\nconst Sections = ({ title, extrasToHeader, body }) => (\n    <React.Fragment>\n        <Section>\n            <H2>{title}</H2>\n            {extrasToHeader}\n        </Section>\n        <Section>\n            <Div>\n                {body}\n            </Div>\n        </Section>\n    </React.Fragment>\n);\n\nexport default Sections;\n","import styled from \"styled-components\";\nimport \"../../fonts.css\";\n\nconst Title = styled.h1`\n    font-size: 2.5em;\n    margin-left: 10px;\n    font-family: 'Rubik', sans-serif;\n`;\n\nconst StyledHeader = styled.header`\n\n`;\n\nexport { Title, StyledHeader };","import React from 'react';\nimport { Title, StyledHeader } from \"./style.js\";\n\nconst Header = ({title}) => (\n    <StyledHeader className=\"header\">\n        <Title className=\"header__title\">{title}</Title>\n    </StyledHeader>\n);\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n    display: flex;\n    flex-direction: column; \n`;\n\n","import React from \"react\";\nimport { Div } from \"./style.js\";\n\n\nconst Container = (props) => (\n    <Div>\n        {props.children}\n    </Div>\n);\n\nexport default Container;\n","import React from \"react\";\n\nconst MainContainer = (props) => (\n    <main>\n        {props.children}\n    </main>\n\n)\n\nexport default MainContainer;","import styled from \"styled-components\";\n\nconst Input = styled.input`\n    border: 1px solid #ccc;\n    padding: 9px;\n    width: 100%;\n\n`;\n\nexport { Input };","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Input } from \"./style.js\";\n\n\nconst Search = () => {\n    const { search, pathname } = useLocation();\n    const query = new URLSearchParams(search).get(\"szukaj\");\n    const history = useHistory();\n\n    const onInputChange = ({ target }) => {\n        const searchParams = new URLSearchParams(search);\n        \n        if (target.value.trim() === \"\"){\n            searchParams.delete(\"szukaj\");\n        } else {\n            searchParams.set(\"szukaj\", target.value);\n        }\n\n        history.push(`${pathname}?${searchParams.toString()}`);\n    }\n\n    return (\n        <>\n            <Input placeholder=\"Szukaj\" value={query || \"\"} onChange={onInputChange} />\n        </>\n    );\n};\n\nexport default Search;","import styled, { css } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst activeClassName = \"active\";\n\nconst StyledNavLink = styled(NavLink).attrs(() => ({\n    activeClassName,\n}))`\n    text-decoration: none;\n    color: black;\n`;\n\n\nconst Ul = styled.ul`\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n`;\n\nconst Li = styled.li`\n    display: ${({ display }) => display || \"flex\"};\n    width: 100%;\n    justify-content: space-around;\n    border-bottom: 1px solid #eeeeee;\n`;\n\nconst Button = styled.button`\n    margin: 10px;\n    height: 30px;\n    width: 30px;\n    color: white;\n    box-shadow: none;\n    border: none;\n    align-self: center;\n    padding: 10px;\n    display: flex;\n    transition: 0.5s;\n\n    &:hover {\n        opacity: 0.7;\n    }\n\n    ${({ done }) => done && css`\n        background-color: green;\n    `}\n\n    ${({ toDelete }) => toDelete && css`\n        background-color: red;\n    `}\n`;\n\nconst Span = styled.span`\n    flex-grow: 1;\n    align-self: center;\n    white-space: normal;\n    text-overflow: visible;\n    padding: 5px;\n\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n    `}\n`;\n\nconst Icon = styled.div`\n    text-align: center;\n    align-self: center;\n    justify-content: center;\n    align-content: flex-start;\n\n    ${({ done }) => done || css`\n        display: none;\n    `}\n`;\n\nexport { Ul, Li, Button, Span, Icon, StyledNavLink };","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { StyledNavLink } from \"./style\";\nimport { toggleTaskDone, removeTask, selectTasksByQuery, selectHideDone } from \"../tasksSlice.js\";\nimport { Ul, Li, Button, Span, Icon } from \"./style.js\";\n\nconst TasksList = () => {\n    const { search } = useLocation();\n    const searchParams = new URLSearchParams(search);\n    const query = searchParams.get(\"szukaj\");\n\n    const tasks = useSelector(state => selectTasksByQuery(state, query));\n\n    const hideDone = useSelector(selectHideDone);\n\n    const dispatch = useDispatch();\n\n    return (\n        <Ul>\n            {tasks.tasks.map(task => (\n                <Li display={`${task.done && hideDone ? \"none\" : \"\"}`} key={task.id} >\n                    <Button done onClick={() => dispatch(toggleTaskDone(task.id))}>\n                        <Icon done={task.done} className=\"fas fa-check \"></Icon>\n                    </Button>\n                    <Span done={task.done}>\n                        <StyledNavLink to={`/zadania/${task.id}`}>{task.content}</StyledNavLink>\n                    </Span>\n                    <Button toDelete onClick={() => dispatch(removeTask(task.id))}>\n                        <Icon done className=\"far fa-trash-alt\"></Icon>\n                    </Button>\n                </Li>\n            ))}\n        </Ul>\n    )\n};\n\nexport default TasksList;","import React from 'react';\nimport Form from \"./Form\";\nimport Buttons from \"./Buttons\";\nimport Section from '../../common/Section';\nimport Header from \"../../common/Header\";\nimport Container from \"../../common/Container\";\nimport MainContainer from \"../../common/MainContainer\";\nimport Search from \"./Search\";\nimport TasksList from './TasksList';\nimport { Button } from \"./Buttons/style\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchExampleTasks } from \"./tasksSlice\";\n\nfunction Tasks() {\n\n  const dispatch = useDispatch();\n\n  return (\n    <MainContainer>\n      <Header\n        title=\"Lista zadań\"\n      />\n      <Container>\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          extrasToHeader={<Button onClick={() => dispatch(fetchExampleTasks())}>Pobierz przykładowe zadania</Button>}\n          body={<Form />}\n        />\n        <Section\n          title=\"Wyszukaj zadania\"\n          body={<Search />}\n        />\n        <Section\n          title=\"Lista zadań\"\n          extrasToHeader={<Buttons />}\n          body={<TasksList />}\n        />\n      </Container>\n    </MainContainer>\n  );\n}\n\nexport default Tasks;\n","import React from 'react';\nimport Section from '../../common/Section';\nimport Header from \"../../common/Header\";\nimport Container from \"../../common/Container\";\nimport MainContainer from \"../../common/MainContainer\";\n\n\nfunction Author() {\n    return (\n        <MainContainer>\n            <Header\n                title=\"O autorze\"\n            />\n            <Container>\n                <Section\n                    title=\"Olga Sowińska\"\n                    body={\n                        <>\n                            <p>Miło, że tu jesteś! Jeśli jesteś rekruterem to nie wahaj się i śmiało się ze mną skontaktuj! 😁 Będzie mi wtedy jeszcze milej 😏</p>\n                        </>\n                    }\n                />\n            </Container>\n        </MainContainer>\n    );\n}\n\nexport default Author;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectTaskById } from \"../tasksSlice\";\nimport Section from '../../../common/Section';\nimport Header from \"../../../common/Header\";\nimport Container from \"../../../common/Container\";\nimport MainContainer from \"../../../common/MainContainer\";\n\n\nfunction Task() {\n    const { id } = useParams();\n    const task = useSelector(state => selectTaskById(state, id));\n\n    console.log(task);\n    return (\n        <MainContainer>\n            <Header\n                title=\"Szczegóły zadania\"\n            />\n            <Container>\n                <Section\n                    title={task ? task.content : \"Nie znaleziono zadania :(\"}\n                    body={\n                        <>\n                            <strong>Zrobione: {task ? (task.done ? \"Tak\" : \"Nie\") : \"\"} </strong>\n                        </>\n                    }\n                />\n            </Container>\n        </MainContainer>\n    );\n}\n\nexport default Task;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst activeClassName = \"active\";\n\nconst StyledNavLink = styled(NavLink).attrs(() => ({\n    activeClassName,\n}))`\n    text-decoration: none;\n    color: white;\n\n    &.${activeClassName} {\n        border-bottom: 2px solid white;\n    }\n`;\n\nconst Nav = styled.nav`\n    background-color: teal;\n    height: 4.5em;\n`;\n\nconst Ul = styled.ul`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    list-style: none;\n    height: 100%;\n    column-gap: 40px;\n`;\n\nconst Li = styled.li`\n    font-size: 1.6em;\n`;\n    \n\nexport { StyledNavLink, Nav, Ul, Li };","import React from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Tasks from \"./features/tasks/Tasks\";\nimport Author from \"./features/author/Author\";\nimport Task from \"./features/tasks/TaskPage/index\";\nimport { StyledNavLink, Nav, Ul, Li } from \"./style\";\n\nexport default function App() {\n    return (\n        <HashRouter>\n            <Nav>\n                <Ul>\n                    <Li><StyledNavLink to=\"/zadania\">Zadania</StyledNavLink></Li>\n                    <Li><StyledNavLink to=\"/author\">O autorze</StyledNavLink></Li>\n                </Ul>\n            </Nav>\n\n            <Switch>\n                <Route path=\"/author\">\n                    <Author />\n                </Route>\n                <Route path=\"/zadania/:id\">\n                    <Task />\n                </Route>\n                <Route path=\"/zadania\">\n                    <Tasks />\n                </Route>\n                <Route>\n                    <Redirect to=\"/zadania\" />\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n  background-color: #eeeeee;\n  max-width: 1000px;\n  margin: 50px auto;\n  font-family: 'Roboto', sans-serif;\n  padding: 10px;\n}\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}